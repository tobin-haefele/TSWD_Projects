#convert total paid to decimal
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid),na.rm = TRUE)
View(X20231122_solutions_fund)
View(solutions_fund)
View(X20231122_solutions_fund)
View(solutions_fund)
knitr::opts_chunk$set(echo = TRUE)
#load data
solutions_fund <- X20231122_solutions_fund
#check data
head(solutions_fund)
#check data types
str(solutions_fund)
#summary statistics
summary(solutions_fund)
#convert total paid to decimal
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid),na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#convert total paid to decimal
solutions_fund$Total.paid = as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid),na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
olutions_fund$Total.paid = as.numeric(gsub("[\\$,]", "", X20231122_solutions_fund$Total.paid),na.rm = TRUE)
#convert total paid to decimal
solutions_fund$Total.paid = as.numeric(gsub("[\\$,]", "", X20231122_solutions_fund$Total.paid),na.rm = TRUE)
View(X20231122_solutions_fund)
library(readr)
X20231122_solutions_fund <- read_csv("20231122-solutions-fund.csv",
col_types = cols(`Total paid` = col_number()))
View(X20231122_solutions_fund)
knitr::opts_chunk$set(echo = TRUE)
#load data
solutions_fund <- X20231122_solutions_fund
#check data
head(solutions_fund)
#check data types
str(solutions_fund)
#summary statistics
summary(solutions_fund)
knitr::opts_chunk$set(echo = TRUE)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(Prevention.or.Literally.Homeless) %>%
summarize(Total.paid = sum(Total.paid)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = percent(Percent.of.Total))
View(solutions_fund)
knitr::opts_chunk$set(echo = TRUE)
summary_data <- solutions_fund %>%
group_by(`Prevention or Literally Homeless`) %>%
summarize(Total.paid = sum(Total.paid)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = percent(Percent.of.Total))
# Load libraries
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(rmarkdown)
library(knitr)
#load data
solutions_fund <- X20231122_solutions_fund
#check data
head(solutions_fund)
#check data types
str(solutions_fund)
#summary statistics
summary(solutions_fund)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(`Prevention or Literally Homeless`) %>%
summarize(Total.paid = sum(Total.paid)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = percent(Percent.of.Total))
knitr::opts_chunk$set(echo = TRUE)
summary_data <- solutions_fund %>%
group_by(`Prevention or Literally Homeless`) %>%
summarize(Total.paid = sum(Total paid)) %>%
knitr::opts_chunk$set(echo = TRUE)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(`Prevention or Literally Homeless`) %>%
summarize(Total.paid = sum(`Total paid`)) %>%
mutate(Percent.of.Total = (`Total paid` / sum(`Total paid`)) %>%
mutate(Percent.of.Total = percent(Percent.of.Total))
print(summary_data)
knitr::opts_chunk$set(echo = TRUE)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(`Prevention or Literally Homeless`) %>%
summarize(Total.paid = sum(`Total paid`)) %>%
mutate(Percent.of.Total = (`Total paid` / sum(`Total paid`))) %>%
mutate(Percent.of.Total = percent(Percent.of.Total))
knitr::opts_chunk$set(echo = TRUE)
names(solutions_fund)
knitr::opts_chunk$set(echo = TRUE)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(`Prevention or Literally Homeless`) %>%
summarize(Total.paid = sum(`Total paid`)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = scales::percent(Percent.of.Total))
knitr::opts_chunk$set(echo = TRUE)
print(summary_data)
print(summary_data)
knitr::opts_chunk$set(echo = TRUE)
# Create the pie chart with custom legend labels
ggplot(summary_data, aes(x = "", y = Total.paid, fill = Prevention.or.Literally.Homeless)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = "Prevention or Currently Homeless",
title = "Allocation of Funds based to preventions or those currently homeless") +
geom_text(aes(label = Percent.of.Total), position = position_stack(vjust = 0.5), size = 10)  +
theme_void() +
scale_fill_manual(labels = c("Currently Homeless", "Prevention"),
values = c("blue", "red")) +  # Set your custom legend labels and colors
theme(legend.position = "right")
knitr::opts_chunk$set(echo = TRUE)
# Create the pie chart with custom legend labels
ggplot(summary_data, aes(x = "", y = `Total.paid`, fill = `Prevention or Literally Homeless`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = "Prevention or Currently Homeless",
title = "Allocation of Funds based on prevention or those currently homeless") +
geom_text(aes(label = Percent.of.Total), position = position_stack(vjust = 0.5), size = 10)  +
theme_void() +
scale_fill_manual(labels = c("Currently Homeless", "Prevention"),
values = c("blue", "red")) +  # Set your custom legend labels and colors
theme(legend.position = "right")
View(summary_data)
View(summary_data)
knitr::opts_chunk$set(echo = TRUE)
# Load csv  file
df <- X20231122_solutions_fund
#transform Total Paid into numeric excluding the $ sign
df$Total.paid <- as.numeric(gsub("[^0-9.]", "", df$Total.paid))
knitr::opts_chunk$set(echo = TRUE)
#unique funding sources
unique(df$Funding.Source)
knitr::opts_chunk$set(echo = TRUE)
unique(df$`Funding Source`)
str(df$Total.paid)
knitr::opts_chunk$set(echo = TRUE)
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(`HMIS #`) %>%
summarise(AveragePaid = mean(`Total paid`, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
# Group by Funding.Source and summarize
average_spend_per_HMIS_by_source <- average_spend_per_HMIS %>%
left_join(df, by = "HMIS #") %>%
group_by(`Funding Source`) %>%
summarise(AveragePaidBySource = mean(AveragePaid, na.rm = TRUE))
# Convert Funding.Source to ordered factor by AveragePaidBySource
average_spend_per_HMIS_by_source$`Funding Source` <- factor(average_spend_per_HMIS_by_source$`Funding Source`,
levels = average_spend_per_HMIS_by_source$`Funding Source`[order(average_spend_per_HMIS_by_source$AveragePaidBySource, decreasing = TRUE)])
# Create a color scale based on the AveragePaidBySource values
color_scale <- scales::viridis_pal(option = "D")(length(unique(average_spend_per_HMIS_by_source$AveragePaidBySource)))
# Create the bar plot
ggplot(average_spend_per_HMIS_by_source, aes(x = `Funding Source`, y = AveragePaidBySource, fill = AveragePaidBySource)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = color_scale[1], high = color_scale[length(color_scale)]) +
labs(title = "Average Spend by Funding Source",
x = "Funding Source",
y = "Average Spend") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
#load data
solutions_fund <- X20231122_solutions_fund
#check data
head(solutions_fund)
#check data types
str(solutions_fund)
#summary statistics
summary(solutions_fund)
names(solutions_fund)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(`Prevention or Literally Homeless`) %>%
summarize(Total.paid = sum(`Total paid`)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = scales::percent(Percent.of.Total))
print(summary_data)
# Create the pie chart with custom legend labels
ggplot(summary_data, aes(x = "", y = `Total.paid`, fill = `Prevention or Literally Homeless`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = "Prevention or Currently Homeless",
title = "Allocation of Funds based on prevention or those currently homeless") +
geom_text(aes(label = Percent.of.Total), position = position_stack(vjust = 0.5), size = 10)  +
theme_void() +
scale_fill_manual(labels = c("Currently Homeless", "Prevention"),
values = c("blue", "red")) +  # Set your custom legend labels and colors
theme(legend.position = "right")
#Evaluate the sources of funding and their impact on services provided.
# Load csv  file
df <- X20231122_solutions_fund
head(df)
#unique funding sources
unique(df$`Funding Source`)
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(`HMIS #`) %>%
summarise(AveragePaid = mean(`Total paid`, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
# Group by Funding.Source and summarize
average_spend_per_HMIS_by_source <- average_spend_per_HMIS %>%
left_join(df, by = "HMIS #") %>%
group_by(`Funding Source`) %>%
summarise(AveragePaidBySource = mean(AveragePaid, na.rm = TRUE))
# Convert Funding.Source to ordered factor by AveragePaidBySource
average_spend_per_HMIS_by_source$`Funding Source` <- factor(average_spend_per_HMIS_by_source$`Funding Source`,
levels = average_spend_per_HMIS_by_source$`Funding Source`[order(average_spend_per_HMIS_by_source$AveragePaidBySource, decreasing = TRUE)])
# Create a color scale based on the AveragePaidBySource values
color_scale <- scales::viridis_pal(option = "D")(length(unique(average_spend_per_HMIS_by_source$AveragePaidBySource)))
# Create the bar plot
ggplot(average_spend_per_HMIS_by_source, aes(x = `Funding Source`, y = AveragePaidBySource, fill = AveragePaidBySource)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = color_scale[1], high = color_scale[length(color_scale)]) +
labs(title = "Average Spend by Funding Source",
x = "Funding Source",
y = "Average Spend") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(average_spend_per_HMIS)
View(average_spend_per_HMIS_by_source)
setwd("~/GitHub/TSWD_Projects/Missoula_Unhoused")
save.image("~/GitHub/TSWD_Projects/Missoula_Unhoused/Data.RData")
knitr::opts_chunk$set(echo = TRUE)
```{r library, include=FALSE}
#load data
X20231122_solutions_fund <- read.csv("20231122_solutions_fund.csv")
knitr::opts_chunk$set(echo = TRUE)
#load data
X20231122_solutions_fund <- read.csv("Missoula_Unhoused\\20231122_solutions_fund.csv")
knitr::opts_chunk$set(echo = TRUE)
#load data
X20231122_solutions_fund <- read.csv("C:/Users/thaef/OneDrive/Documents/GitHub/TSWD_Projects/Missoula_Unhoused/20231122-solutions-fund.csv")
#load data
solutions_fund <- X20231122_solutions_fund
#check data
head(solutions_fund)
#check data types
str(solutions_fund)
#summary statistics
summary(solutions_fund)
names(solutions_fund)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(`Prevention or Literally Homeless`) %>%
summarize(Total.paid = sum(`Total paid`)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = scales::percent(Percent.of.Total))
knitr::opts_chunk$set(echo = TRUE)
```{r}
#load data
solutions_fund <- X20231122_solutions_fund
#check data
head(solutions_fund)
#check data types
str(solutions_fund)
#summary statistics
summary(solutions_fund)
names(solutions_fund)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(Prevention.or.Literally.Homeless) %>%
summarize(Total.paid = sum(Total.paid)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = scales::percent(Percent.of.Total))
#convert to numeric
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid))
print(summary_data)
summary_data <- solutions_fund %>%
group_by(Prevention.or.Literally.Homeless) %>%
summarize(Total.paid = sum(Total.paid)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = scales::percent(Percent.of.Total))
print(summary_data)
# Create the pie chart with custom legend labels
ggplot(summary_data, aes(x = "", y = `Total.paid`, fill = Prevention.or.Literally.Homeless)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = "Prevention or Currently Homeless",
title = "Allocation of Funds based on prevention or those currently homeless") +
geom_text(aes(label = Percent.of.Total), position = position_stack(vjust = 0.5), size = 10)  +
theme_void() +
scale_fill_manual(labels = c("Currently Homeless", "Prevention"),
values = c("blue", "red")) +  # Set your custom legend labels and colors
theme(legend.position = "right")
knitr::opts_chunk$set(echo = TRUE)
#load data
X20231122_solutions_fund <- read.csv("C:/Users/thaef/OneDrive/Documents/GitHub/TSWD_Projects/Missoula_Unhoused/20231122-solutions-fund.csv")
#convert to numeric
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid))
#load data
solutions_fund <- X20231122_solutions_fund
#check data
head(solutions_fund)
#check data types
str(solutions_fund)
#summary statistics
summary(solutions_fund)
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(Prevention.or.Literally.Homeless) %>%
summarize(Total.paid = sum(Total.paid)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = scales::percent(Percent.of.Total))
#Evaluate the sources of funding and their impact on services provided.
# Load csv  file
df <- X20231122_solutions_fund
head(df)
#unique funding sources
unique(df$`Funding Source`)
#convert to numeric
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid))
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(`HMIS #`) %>%
summarise(AveragePaid = mean(Total.paid, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
View(X20231122_solutions_fund)
View(solutions_fund)
#Evaluate the sources of funding and their impact on services provided.
# Load csv  file
df <- X20231122_solutions_fund
head(df)
#unique funding sources
unique(df$`Funding Source`)
#convert to numeric
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid))
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(HMIS..) %>%
summarise(AveragePaid = mean(Total.paid, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
# Group by Funding.Source and summarize
average_spend_per_HMIS_by_source <- average_spend_per_HMIS %>%
left_join(df, by = "HMIS..") %>%
group_by(`Funding Source`) %>%
summarise(AveragePaidBySource = mean(AveragePaid, na.rm = TRUE))
#Evaluate the sources of funding and their impact on services provided.
# Load csv  file
df <- X20231122_solutions_fund
head(df)
#unique funding sources
unique(df$`Funding Source`)
#convert to numeric
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid))
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(HMIS..) %>%
summarise(AveragePaid = mean(Total.paid, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
# Group by Funding.Source and summarize
average_spend_per_HMIS_by_source <- average_spend_per_HMIS %>%
left_join(df, by = "HMIS..") %>%
group_by(`Funding.Source`) %>%
summarise(AveragePaidBySource = mean(AveragePaid, na.rm = TRUE))
# Convert Funding.Source to ordered factor by AveragePaidBySource
average_spend_per_HMIS_by_source$`Funding.Source` <- factor(average_spend_per_HMIS_by_source$`Funding Source`,
levels = average_spend_per_HMIS_by_source$`Funding Source`[order(average_spend_per_HMIS_by_source$AveragePaidBySource, decreasing = TRUE)])
# Load csv  file
df <- X20231122_solutions_fund
head(df)
#unique funding sources
unique(df$`Funding Source`)
#convert to numeric
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid))
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(HMIS..) %>%
summarise(AveragePaid = mean(Total.paid, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
# Group by Funding.Source and summarize
average_spend_per_HMIS_by_source <- average_spend_per_HMIS %>%
# Load csv  file
df <- X20231122_solutions_fund
- X20231122_solutions_fund
head(df)
# Load csv  file
df <- X20231122_solutions_fund
head(df)
#unique funding sources
unique(df$`Funding Source`)
View(df)
View(X20231122_solutions_fund)
View(X20231122_solutions_fund)
# Load csv  file
df <- X20231122_solutions_fund
head(df)
head(df)
unique(df$`Funding Source`)
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid))
tail(df)
# Load csv  file
df <- X20231122_solutions_fund
head(df)
#unique funding sources
unique(df$`Funding Source`)
#convert to numeric
df$Total.paid <- as.numeric(gsub("[\\$,]", "", df$Total.paid))
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(HMIS..) %>%
summarise(AveragePaid = mean(Total.paid, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
# Group by Funding.Source and summarize
average_spend_per_HMIS_by_source <- average_spend_per_HMIS %>%
left_join(df, by = "HMIS..") %>%
group_by(`Funding.Source`) %>%
summarise(AveragePaidBySource = mean(AveragePaid, na.rm = TRUE))
# Convert Funding.Source to ordered factor by AveragePaidBySource
average_spend_per_HMIS_by_source$`Funding.Source` <- factor(average_spend_per_HMIS_by_source$`Funding Source`,
levels = average_spend_per_HMIS_by_source$`Funding Source`[order(average_spend_per_HMIS_by_source$AveragePaidBySource, decreasing = TRUE)])
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(HMIS..) %>%
summarise(AveragePaid = mean(Total.paid, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
# Group by Funding.Source and summarize
average_spend_per_HMIS_by_source <- average_spend_per_HMIS %>%
left_join(df, by = "HMIS..") %>%
group_by(`Funding.Source`) %>%
summarise(AveragePaidBySource = mean(AveragePaid, na.rm = TRUE))
# Convert Funding.Source to ordered factor by AveragePaidBySource
average_spend_per_HMIS_by_source$`Funding.Source` <- factor(average_spend_per_HMIS_by_source$Funding.Source,
levels = average_spend_per_HMIS_by_source$Funding.Source[order(average_spend_per_HMIS_by_source$AveragePaidBySource, decreasing = TRUE)])
# Create a color scale based on the AveragePaidBySource values
color_scale <- scales::viridis_pal(option = "D")(length(unique(average_spend_per_HMIS_by_source$AveragePaidBySource)))
# Create the bar plot
ggplot(average_spend_per_HMIS_by_source, aes(x = `Funding.Source`, y = AveragePaidBySource, fill = AveragePaidBySource)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = color_scale[1], high = color_scale[length(color_scale)]) +
labs(title = "Average Spend by Funding Source",
x = "Funding Source",
y = "Average Spend") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
# Convert Funding.Source to ordered factor by AveragePaidBySource
average_spend_per_HMIS_by_source$`Funding.Source` <- factor(average_spend_per_HMIS_by_source$Funding.Source,
levels = average_spend_per_HMIS_by_source$Funding.Source[order(average_spend_per_HMIS_by_source$AveragePaidBySource, decreasing = TRUE)])
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(rmarkdown)
library(knitr)
#load data
X20231122_solutions_fund <- read.csv("C:/Users/thaef/OneDrive/Documents/GitHub/TSWD_Projects/Missoula_Unhoused/20231122-solutions-fund.csv")
#load data
solutions_fund <- X20231122_solutions_fund
#check data
head(solutions_fund)
#check data types
str(solutions_fund)
#summary statistics
summary(solutions_fund)
#convert to numeric
solutions_fund$Total.paid <- as.numeric(gsub("[\\$,]", "", solutions_fund$Total.paid))
# Calculate Total.paid and Percent.of.Total
summary_data <- solutions_fund %>%
group_by(Prevention.or.Literally.Homeless) %>%
summarize(Total.paid = sum(Total.paid)) %>%
mutate(Percent.of.Total = Total.paid / sum(Total.paid)) %>%
mutate(Percent.of.Total = scales::percent(Percent.of.Total))
print(summary_data)
# Create the pie chart with custom legend labels
ggplot(summary_data, aes(x = "", y = `Total.paid`, fill = Prevention.or.Literally.Homeless)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = "Prevention or Currently Homeless",
title = "Allocation of Funds based on prevention or those currently homeless") +
geom_text(aes(label = Percent.of.Total), position = position_stack(vjust = 0.5), size = 10)  +
theme_void() +
scale_fill_manual(labels = c("Currently Homeless", "Prevention"),
values = c("blue", "red")) +  # Set your custom legend labels and colors
theme(legend.position = "right")
knitr::opts_chunk$set(echo = TRUE)
#Evaluate the sources of funding and their impact on services provided.
# Load csv  file
df <- X20231122_solutions_fund
head(df)
#unique funding sources
unique(df$`Funding.Source`)
#convert to numeric
df$Total.paid <- as.numeric(gsub("[\\$,]", "", df$Total.paid))
# Calculate average spend per unique HMIS (patient number)
average_spend_per_HMIS <- df %>%
group_by(HMIS..) %>%
summarise(AveragePaid = mean(Total.paid, na.rm = TRUE)) %>%
arrange(desc(AveragePaid))
# Group by Funding.Source and summarize
average_spend_per_HMIS_by_source <- average_spend_per_HMIS %>%
left_join(df, by = "HMIS..") %>%
group_by(`Funding.Source`) %>%
summarise(AveragePaidBySource = mean(AveragePaid, na.rm = TRUE))
# Convert Funding.Source to ordered factor by AveragePaidBySource
average_spend_per_HMIS_by_source$`Funding.Source` <- factor(average_spend_per_HMIS_by_source$Funding.Source,
levels = average_spend_per_HMIS_by_source$Funding.Source[order(average_spend_per_HMIS_by_source$AveragePaidBySource, decreasing = TRUE)])
# Create a color scale based on the AveragePaidBySource values
color_scale <- scales::viridis_pal(option = "D")(length(unique(average_spend_per_HMIS_by_source$AveragePaidBySource)))
# Create the bar plot
ggplot(average_spend_per_HMIS_by_source, aes(x = `Funding.Source`, y = AveragePaidBySource, fill = AveragePaidBySource)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = color_scale[1], high = color_scale[length(color_scale)]) +
labs(title = "Average Spend by Funding Source",
x = "Funding Source",
y = "Average Spend") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
